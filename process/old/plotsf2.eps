%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.3 (Build 14D136) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 512 512
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 512 512
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 512 512 rc
0 512 m
512 512 l
512 0 l
0 0 l
h
f
0 0 0 sc
115.534 486.21201 m
115.3756 486.34421 115.3263 486.52609 115.1408 486.6655 c
114.7449 486.9628 114.5306 487.52869 114.1398 487.8114 c
113.9428 487.95401 112.9505 489.14319 113.1864 489.3988 c
113.3599 489.58691 115.4009 488.8009 115.6532 488.62299 c
116.6148 487.94461 117.6681 487.37671 118.1676 486.2955 c
118.3822 485.83081 118.3598 485.46661 117.8697 485.22131 c
117.3633 484.96771 116.4186 485.4202 115.9392 485.6033 c
115.534 486.21201 l
h
171.2112 470.26682 m
170.2592 472.78961 l
177.6848 476.54999 l
178.8748 481.83359 l
173.1152 492.92441 l
168.022 494.73318 l
163.1192 492.44839 l
161.6436 487.30759 l
170.30679 470.69519 l
170.3528 470.45569 170.3992 470.2984 170.3992 470.06281 c
169.07381 469.73151 169.6846 469.0647 169.5412 467.81891 c
169.41499 466.7233 167.931 467.03409 168.54021 465.81369 c
168.7675 465.35818 170.02119 464.12241 170.4469 463.76071 c
171.0437 463.25381 172.319 463.08981 173.0686 462.82971 c
173.9474 462.5249 174.2518 461.81369 175.26131 461.80331 c
177.5493 461.77939 l
178.8791 461.76559 179.491 460.81009 180.0995 462.6149 c
180.7504 464.5451 181.10429 465.44019 181.0052 467.50861 c
180.9256 469.16901 180.85271 468.27051 181.9108 469.4183 c
182.37331 469.9201 181.98199 470.82751 182.84039 471.0416 c
182.951 471.4852 183.50841 471.5621 183.3409 472.2352 c
182.8978 472.2352 180.3495 471.38251 180.1472 471.08929 c
179.9032 470.73541 179.4249 470.5296 179.0031 470.6835 c
178.5141 470.86179 175.8548 469.05811 174.9991 468.8931 c
174.1026 468.72031 173.89461 469.39441 173.3307 469.39441 c
172.73331 469.39441 171.67239 468.92041 171.3049 469.65701 c
171.2112 470.26682 l
31.735201 329.60181 m
31.372801 331.04089 30.9424 333.34509 31.044001 334.80579 c
30.5548 336.11441 30.651199 337.668 30.1383 339.0072 c
28.803699 342.49249 l
28.111601 344.2999 28.2022 345.89481 28.1602 347.7442 c
28.0648 351.94559 l
28.0648 354.4603 27.633801 356.49231 27.3736 358.86841 c
27.149799 360.9115 26.556801 362.9465 26.468 364.97949 c
26.4256 365.9505 26.0028 367.2749 26.181999 368.20221 c
26.181999 370.3342 25.405001 372.47971 25.3239 374.5282 c
25.2556 376.25131 25.806999 378.1163 24.8473 379.68439 c
23.941601 387.9679 l
22.034901 400.6676 l
21.153099 412.98529 l
20.8337 414.7955 20.7071 416.875 20.9147 418.6907 c
21.050699 419.87979 21.341499 421.27899 20.438 422.2475 c
19.4727 423.2821 19.5938 423.31299 20.0329 424.6347 c
20.3316 425.534 19.4146 426.86569 19.985201 427.11731 c
20.8374 427.49301 21.097 427.30661 20.7717 428.28699 c
20.7101 428.4725 21.697701 429.42789 21.891899 429.83871 c
22.422899 429.7529 25.687901 432.35211 26.3011 433.01361 c
27.182501 433.9642 27.721001 435.79089 29.089701 435.85431 c
35.7869 436.1647 l
36.227299 436.18509 36.8909 436.0737 37.1693 435.68719 c
38.534199 433.79309 39.276699 435.59171 40.720501 435.59171 c
41.133598 433.9393 45.279202 437.13071 45.773201 437.26279 c
47.329899 437.97879 48.500999 438.24689 49.681999 439.62601 c
50.969002 441.12909 52.294201 444.06451 52.7803 445.952 c
53.063301 447.0506 53.253101 447.97809 53.9482 448.86441 c
54.6506 449.7598 54.301601 451.129 55.068401 451.99149 c
56.049702 453.25562 55.932899 454.33069 56.307701 455.78711 c
56.550701 456.7312 57.164101 457.56061 57.404099 458.58011 c
57.796501 460.24631 57.2187 465.64841 59.5014 466.21899 c
59.5014 463.67419 62.663101 463.99011 64.315804 463.617 c
66.084099 463.2179 66.259804 461.4136 67.557198 461.01501 c
69.562599 460.39899 71.162399 458.32181 72.9674 458.0311 c
75.218002 457.66849 79.863403 459.4075 82.191101 459.98849 c
83.681 460.21078 85.507797 459.81689 86.886299 460.2511 c
89.198601 460.97961 91.343697 461.89389 93.7742 462.23251 c
94.519096 462.3363 95.324402 462.35699 96.014603 462.66211 c
96.279099 462.77911 97.921303 463.11731 97.921303 462.85309 c
95.532097 462.2558 93.083504 461.07379 90.747398 460.48981 c
90.747398 458.50571 97.3946 461.2067 98.564796 461.30151 c
99.5513 461.3815 101.4905 461.72821 102.3544 461.37311 c
102.6214 461.26331 102.5602 460.9437 102.831 460.82401 c
103.2301 460.64749 103.6339 460.90891 104.0942 460.65689 c
104.6177 460.37039 104.2364 460.03809 104.4517 459.6066 c
104.5947 459.26041 l
106.1439 459.43951 l
105.6315 463.12759 l
106.0367 463.18729 l
106.2869 461.397 l
106.7636 461.50439 l
106.5133 463.53351 l
107.1092 463.56931 l
107.3118 461.65948 l
107.9433 461.7789 l
107.7527 463.86771 l
108.3723 463.91541 l
108.563 462.1012 l
109.4806 462.54279 l
110.7319 462.7218 l
111.1609 462.61441 l
111.679 462.3175 111.5518 463.03549 111.5838 463.36639 c
111.6702 464.26089 111.714 464.6524 112.2869 465.3895 c
112.5284 465.7001 112.9023 465.92059 113.2879 465.99219 c
113.4969 466.03091 114.2802 466.10211 114.4199 465.9147 c
114.414 465.8967 l
114.0463 465.71439 113.6262 465.6936 113.264 465.4671 c
111.7896 464.54541 111.7827 463.56989 112.0545 461.93411 c
112.3276 461.70789 112.4045 461.3302 112.7577 461.20599 c
113.3581 460.99469 113.8648 460.32419 114.5691 460.72849 c
115.1182 461.04361 115.4825 461.54031 116.1421 461.7431 c
116.9415 461.9888 117.348 462.31049 117.4768 463.15149 c
117.5278 463.48459 117.33 463.43271 117.1431 463.59311 c
116.7727 463.9108 116.4147 464.13129 116.2255 464.5957 c
115.8918 465.00159 l
116.3447 465.1925 l
118.6089 463.056 l
120.9088 463.0918 l
120.8135 463.59311 l
119.014 463.58121 l
118.9783 463.85571 l
120.9684 463.9631 l
121.457 463.59311 l
121.5404 462.7576 l
122.5771 462.76959 l
122.6129 463.43799 l
121.7549 463.58121 l
118.2871 466.7919 l
118.6327 466.86349 l
119.3596 466.38611 l
119.741 466.4458 l
119.4907 466.91129 l
119.9435 467.0784 l
123.6377 464.05859 l
124.4719 464.08249 l
124.3766 464.3212 l
123.745 464.64349 l
123.7807 464.73901 l
124.6507 464.46451 l
126.7361 463.89151 l
127.5107 464.0228 l
128.905 463.49771 l
128.7858 464.71509 l
128.04691 466.4935 l
129.3101 466.88739 l
129.4055 464.5957 l
130.46609 463.43799 l
130.5376 462.88889 l
132.81371 462.0415 l
132.70641 465.02539 l
133.31419 464.98959 l
133.7551 461.28949 l
134.3271 461.06271 l
134.3271 461.94958 135.2372 463.46078 135.2804 463.55731 c
135.769 463.25891 l
134.9706 460.8956 l
135.7809 460.5137 l
137.056 462.32791 l
137.5446 462.0773 l
136.3649 460.14371 l
137.2944 459.71399 l
138.8912 461.5282 l
139.40359 461.36111 l
139.03419 456.4675 l
139.2606 456.1929 l
141.48911 457.6969 l
141.7751 457.27911 l
139.7135 455.7991 l
140.0948 455.34549 l
142.1922 456.70621 l
142.5258 456.2049 l
140.4046 454.78448 l
140.83369 454.2713 l
142.931 455.72739 l
143.93201 454.3429 l
141.7751 452.61221 l
142.1683 452.1348 l
144.3253 453.73419 l
144.6232 453.31641 l
142.33521 451.4783 l
144.1465 448.9718 l
144.6351 448.9718 l
146.375 450.34439 l
146.7086 449.9744 l
144.84959 448.48239 l
145.26669 447.99301 l
147.0304 449.3895 l
147.3045 449.12689 l
145.8149 447.50369 l
147.28059 445.80881 l
148.4366 446.70401 l
148.9371 446.2146 l
148.22211 444.92551 l
148.7106 444.53171 l
148.6153 443.6723 l
150.11681 441.73871 l
151.2608 439.56641 l
152.71471 437.71631 l
155.45551 437.97891 l
155.539 437.25079 l
153.1675 437.02399 l
153.2509 436.10501 l
155.32449 436.34369 l
155.3602 436.02139 l
153.19141 435.37689 l
153.21519 434.7562 l
156.2063 434.85172 l
156.1467 432.73911 l
152.9769 432.67941 l
153.0007 431.72449 l
155.09801 431.70071 l
155.0504 431.2471 l
152.8219 431.2113 l
152.8338 430.34 l
154.66901 430.32809 l
154.7644 429.89841 l
152.84579 429.77899 l
152.8577 428.99121 l
155.7773 429.0271 l
155.825 428.37061 l
152.7981 428.4183 l
152.84579 427.70221 l
154.9193 427.74991 l
154.9312 427.34409 l
152.72659 427.30829 l
152.9649 423.1546 l
150.23621 421.14941 l
142.4426 413.65369 l
142.72861 413.05701 l
150.61749 420.6004 l
152.8817 420.9585 l
153.57291 420.0036 l
155.64639 420.17068 l
155.6703 419.0249 l
153.5014 418.6907 l
153.73981 417.71191 l
158.7448 417.8313 l
159.2215 414.60861 l
158.9117 414.58469 l
156.05161 416.39899 l
153.73981 416.06479 l
154.6693 412.9137 l
157.43401 411.6485 l
157.2433 411.14719 l
155.02679 412.05429 l
155.1221 411.3143 l
155.8371 410.0253 l
155.2413 409.7627 l
154.8123 407.51871 l
154.2403 406.22971 l
154.2879 405.0838 l
153.69209 403.8425 l
154.8838 402.93539 l
156.004 401.45541 l
156.24229 401.45541 l
156.21851 403.8425 l
156.48061 403.8425 l
156.6236 401.6225 l
157.3625 401.6225 l
157.3148 403.93799 l
157.69611 403.93799 l
157.76759 401.88501 l
158.41119 401.88501 l
158.29201 404.7735 l
158.5542 404.7735 l
158.64951 401.83731 l
159.10229 401.90891 l
159.0547 405.0838 l
159.8412 405.06 l
159.722 401.3121 l
157.43401 401.3121 l
158.4827 400.21399 l
158.76871 398.35199 l
161.19971 398.2804 l
161.08051 403.1741 l
161.4619 403.22189 l
161.4857 398.11331 l
159.436 397.9462 l
159.50751 394.96231 l
159.436 393.5061 l
159.9603 392.8616 l
160.0318 392.12161 l
156.3853 391.88281 l
156.3615 391.4054 l
157.7438 391.3815 l
157.86301 389.71051 l
158.67329 389.7821 l
159.19769 389.1376 l
160.5562 389.11371 l
160.81841 387.9679 l
164.8224 388.2305 l
165.39439 383.81421 l
154.2659 382.68231 l
150.60069 382.30151 l
149.0775 383.06311 l
147.4115 383.34869 l
147.0307 382.30151 l
149.9819 380.96869 l
154.02789 381.30191 l
160.69189 381.30191 l
164.11909 381.58749 l
166.0231 381.2067 l
166.16589 380.54031 l
166.4039 379.58829 l
167.0703 378.77911 l
168.78391 379.15991 l
173.87711 372.16269 l
173.1631 371.73431 l
167.4035 371.54391 l
168.11749 370.6871 l
168.4175 370.63501 168.6595 370.08081 169.0162 369.90891 c
169.9649 369.4519 170.9451 369.51059 171.9716 369.6821 c
172.4041 369.75439 174.01939 369.9747 174.37869 369.70599 c
174.37869 369.5271 173.57339 369.47299 173.4254 369.43149 c
171.9584 369.02011 170.3774 367.91571 168.8494 367.91571 c
167.6656 367.91571 166.85519 369.40759 165.9537 369.40759 c
165.92599 369.37311 166.22771 368.8078 166.22771 368.54831 c
166.22771 367.78241 166.1937 367.48019 165.6319 366.97281 c
165.4743 366.83041 165.3019 366.0712 165.45309 365.91049 c
165.8316 365.5079 166.4481 364.4538 165.92979 363.9053 c
165.131 363.06021 165.1212 363.3595 165.96561 362.59241 c
167.4915 362.52081 l
168.3537 363.4791 168.42101 363.6308 169.39819 364.50211 c
170.5799 363.61459 172.0182 361.95349 172.6395 361.3988 c
173.14 361.7569 l
174.4747 361.37491 l
176.2861 363.49951 l
176.42909 363.3324 l
175.04671 361.54199 l
175.201 361.4227 l
176.13049 362.44919 l
176.2616 362.43719 l
175.3678 361.3392 l
175.59419 361.18399 l
176.42841 362.18661 l
176.6787 362.11499 l
175.916 361.005 l
176.07091 360.93329 l
176.55949 361.36301 l
178.03709 360.4082 l
178.8951 361.29141 l
179.1097 361.17209 l
178.3351 360.08591 l
178.7998 359.75171 l
179.66969 360.8259 l
179.9319 360.68271 l
179.24071 359.44141 l
180.2775 358.6059 l
180.9687 358.74911 l
181.48109 358.94009 l
182.63699 359.03561 l
182.8157 358.68951 l
183.37579 358.62979 l
183.6857 358.224 l
179.9677 357.17361 l
179.83659 356.76779 l
180.56351 356.6246 l
184.1861 357.83011 l
184.1861 357.31689 l
181.5168 356.42169 l
181.5168 356.23071 l
184.6747 356.9827 l
184.24651 353.6763 l
180.0518 352.23209 l
180.62379 350.76401 l
181.8078 350.76401 180.98399 350.86411 183.8056 351.89789 c
183.84129 351.53979 l
180.3497 350.2627 l
176.61971 352.9483 l
176.2027 352.3634 l
179.1342 350.07169 l
178.7767 349.6778 l
181.7205 347.67261 l
181.5536 347.3623 l
178.6459 349.12881 l
177.93089 348.10229 l
182.53081 344.3067 l
181.62511 343.30411 l
178.7413 345.42871 l
178.2169 344.56931 l
179.4324 343.56671 l
179.0988 342.85059 l
183.1982 339.84271 l
183.1028 339.6756 l
179.0511 342.65961 l
177.8118 340.79761 l
181.62511 338.1001 l
181.4583 337.81369 l
177.7403 340.5589 l
177.4066 340.41571 l
177.0014 340.2247 l
176.7854 340.2056 176.35339 340.18079 176.1431 340.2366 c
175.87959 340.30661 175.92979 340.66971 175.6783 340.74991 c
174.6088 341.0914 174.53239 342.0405 173.71201 342.3851 c
173.0139 342.67819 172.1407 342.32831 171.5313 343.0177 c
170.7019 343.95621 169.7524 344.15601 168.5282 343.87701 c
167.918 343.73792 167.33791 343.68649 166.9671 344.22321 c
166.83231 344.4184 166.9839 344.66751 166.90759 344.86771 c
166.81261 345.11731 166.3391 345.56812 166.1568 345.77481 c
165.64819 345.90579 165.6548 345.80539 165.3822 346.27609 c
165.1909 346.6066 165.36729 347.16309 165.1796 347.3981 c
164.78819 347.88831 164.9474 348.63571 164.834 349.284 c
164.69189 350.09579 163.8376 351.17319 162.91541 350.76401 c
161.6844 350.2179 161.6433 348.353 160.1627 348.353 c
158.7207 348.6633 l
158.45 348.72159 158.4558 348.02261 158.3275 347.86359 c
158.08591 347.56451 157.70779 347.44611 157.70779 347.00421 c
157.70779 346.6423 157.1059 346.367 157.1954 346.09711 c
157.36749 345.57861 158.23669 345.18771 158.5777 344.76031 c
158.78799 344.49661 159.14751 343.79721 159.4357 343.6741 c
159.84669 343.49869 161.255 343.905 161.116 343.0654 c
161.0677 342.7731 161.132 342.397 161.4973 342.397 c
161.9924 342.397 162.1389 341.96249 162.54601 341.93149 c
162.5954 341.93439 162.64011 341.93839 162.689 341.93149 c
163.1055 341.39511 164.3373 341.3732 164.7149 340.70209 c
165.1525 339.92459 163.782 338.57571 163.3564 337.89719 c
162.52451 336.5708 161.5912 335.67789 160.97301 334.17319 c
161.07961 332.6723 162.0625 332.8389 162.30769 331.54739 c
162.43221 330.8912 163.46429 330.2377 164.05949 330.71191 c
164.2668 330.87701 165.1259 332.5354 165.4061 331.8338 c
165.5173 331.55539 166.71181 330.9617 166.3475 330.68799 c
165.5119 330.06039 163.1868 330.33899 162.2243 330.49701 c
161.55949 330.6062 159.4687 330.5715 159.03059 331.01019 c
158.5407 331.50061 157.68871 331.23959 157.0643 331.33249 c
156.6176 331.39899 156.058 331.60031 155.67 331.8338 c
154.7874 332.3652 154.924 332.4725 154.04939 332.1561 c
153.1203 331.8201 153.4505 331.2034 152.6432 330.84311 c
151.81351 330.6828 151.64211 330.7612 151.1059 331.32059 c
150.407 332.04959 150.4393 331.19019 149.8904 331.38031 c
149.5649 331.4931 149.02139 331.93289 148.6868 331.8577 c
148.186 331.74521 147.4922 330.452 147.0423 330.10309 c
146.9991 330.06961 146.9568 330.03531 146.916 330.00021 c
31.735001 329.60181 m
69.582001 329.9585 l
85.578903 330.03671 l
146.9158 330.00021 l
9.9997997 501.99921 m
f
ep
end
%%Trailer
%%EOF
